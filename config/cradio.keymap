/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

&mt {
    //  flavor = "tap-preferred";
    // tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

        combo_ralt {
            timeout-ms = <50>;
            key-positions = <17 16>;
            bindings = <&kp RALT>;
        };

        combo_lalt {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp LALT>;
        };

        combo_lgui {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp LGUI>;
        };

        combo_rgui {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp RGUI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
       &kp Q   &kp W   &kp E   &kp R      &kp T         &kp Y   &kp U      &kp I    &kp O                  &kp P
       &kp A   &kp S   &kp D   &kp F      &kp G         &kp H   &kp J      &kp K    &kp L          &kp SEMICOLON
 &mt LSHFT Z   &kp X   &kp C   &kp V      &kp B         &kp N   &kp M  &kp COMMA  &kp DOT  &mt RIGHT_SHIFT SLASH
                               &mo 1  &kp SPACE  &mt RGUI RET   &mo 2
            >;
        };

        left_layer {
            bindings = <
 &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_NUMBER_0
         &kp TAB        &kp LC(S)          &kp DQT        &kp PIPE2         &kp HASH        &kp MINUS     &kp KP_EQUAL         &kp LBKT         &kp RBKT          &kp DEL
         &kp ESC        &kp TILDE  &kp NON_US_BSLH  &kp NON_US_HASH       &kp TILDE2        &kp MINUS        &kp GRAVE         &kp LBKT         &kp RBKT          &kp DEL
                                                              &mo 1         &kp LGUI         &kp RGUI            &mo 2
            >;
        };

        right_layer {
            bindings = <
 &kp EXCLAMATION   &kp AT_SIGN  &kp HASH   &kp DLLR    &kp PERCENT  &kp CARET      &kp AMPS  &kp STAR  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
        &kp HASH     &kp QMARK  &kp FSLH  &kp COLON  &kp SEMICOLON  &kp MINUS  &kp KP_EQUAL  &kp LBRC              &kp RBRC          &kp BACKSPACE
       &kp LSHFT  &kp KP_SLASH  &kp LBKT   &kp RBKT       &kp BSLH  &kp UNDER      &kp LEFT  &kp DOWN                &kp UP              &kp RIGHT
                                              &mo 3      &kp SPACE  &kp ENTER         &mo 2
            >;
        };

        tri_layer {
            bindings = <
 &kp K_CUT  &kp K_COPY  &kp K_PASTE  &kp K_REFRESH  &trans  &trans     &trans           &trans      &trans  &trans
    &kp F1      &kp F2       &kp F3         &kp F4  &kp F5  &trans  &kp PG_UP  &kp K_VOLUME_UP  &kp K_MUTE  &trans
    &trans      &trans       &trans         &kp F6  &kp F7  &trans  &kp PG_DN     &kp K_VOL_DN      &trans  &trans
                                            &trans  &trans  &trans     &trans
            >;
        };
    };
};
